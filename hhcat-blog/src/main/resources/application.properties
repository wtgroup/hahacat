server.port=8080

# velocity
spring.velocity.cache=false
spring.velocity.prefix=
spring.velocity.suffix=.html
#spring.velocity.content-type=text/html;charset=UTF-8
spring.velocity.contentType=text/html;charset=UTF-8

spring.velocity.resourceLoaderPath=classpath:/templates/
spring.velocity.input.encoding=UTF-8
spring.velocity.output.encoding=UTF-8
spring.velocity.charset=UTF-8
#spring.velocity.properties.input.encoding=UTF-8
#spring.velocity.properties.output.encoding=UTF-8


#数据库配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/hhcat_blog
spring.datasource.username=root
spring.datasource.password=88
#--------------------------
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,logback
#spring.datasource.druid.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000


# Druid\u7edf\u8ba1\u914d\u7f6e
#spring.datasource.druid.stat-view-servlet.enabled=true
#spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
#spring.datasource.druid.stat-view-servlet.reset-enable=false
#spring.datasource.druid.stat-view-servlet.login-username=root
#spring.datasource.druid.stat-view-servlet.login-password=root
#spring.datasource.druid.stat-view-servlet.allow=
#spring.datasource.druid.stat-view-servlet.deny=

mybatis.configLocation=classpath:mybatis-config.xml
# 启动类中配置了@ComponentScan(basePackages = "com.wtgroup.blog"),
# 且xml和接口同路径, 下面的貌似无需了. 因为mybatis自动会在同路径下找到对应的配置类.
#mybatis.mapperLocations=classpath:mapper/**.xml
#mybatis.mapperLocations=classpath:com/wtgroup/blog/mapper/**.xml




# 解决页面乱码问题(貌似不用)
#spring.http.encoding.force=true
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#server.tomcat.uri-encoding=UTF-8