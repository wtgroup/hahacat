<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用: 绑定接口, 实现mapper东塔代理 -->
<mapper namespace="x01_mybatis_test.mapper.OrdersMapper">
    <resultMap id="Orders" type="Orders">
        <result column="user_id" property="userId"/>
    </resultMap>
    <select id="findAll" resultMap="Orders">
      SELECT * FROM `orders`
    </select>


    <!--
    关联查询-->
    <!--多对一=>
        以多方为基准,
        先封装多方-->
    <resultMap id="ordersWithUser" type="Orders">
        <result column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="number" property="number"/>
        <result column="note" property="note"/>
        <result column="createtime" property="createtime"/>
        <!--关联表-->
        <association property="user" javaType="User">
            <result column="uId" property="id"/>
            <result column="username" property="username"/>
        </association>
    </resultMap>
    <select id="findWithUser" resultMap="ordersWithUser">
        SELECT
            o.id,
            o.user_id,
            o.number,
            o.note,
            o.createtime,
            u.id AS uId,
            u.username
        FROM
            orders o
            LEFT JOIN USER u ON o.user_id = u.id;
    </select>


    <!--用户->订单 一对多
        一方为基准
        先封装一方-->
    <resultMap id="findByUserJoinOrders" type="User">
        <id column="uId" property="id"></id>
        <result column="username" property="username"/>
        <collection property="orders" javaType="Orders">
            <result column="id" property="id"/>
            <result column="user_id" property="userId"/>
            <result column="number" property="number"/>
            <result column="note" property="note"/>
            <result column="createtime" property="createtime"/>
        </collection>

    </resultMap>
    <select id="findByUserJoinOrders" resultMap="findByUserJoinOrders">
            SELECT
            o.id,
            o.user_id,
            o.number,
            o.note,
            o.createtime,
            u.id AS uId,
            u.username
        FROM
            orders o
            RIGHT JOIN USER u ON o.user_id = u.id;

    </select>

</mapper>
